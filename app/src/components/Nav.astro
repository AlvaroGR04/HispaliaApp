<div class="nav">
    <div class="titulo">
        <a href="/">
            <h1>Hispaliapp</h1>
            <h4>La ciudad de Sevilla</h4>
        </a>
    </div>
    <div class="pages">
        <a href="#Sevilla"><b>Sevilla</b></a>
        <a href="#semanasanta"><b>Semana Santa</b></a>
        <div class="search-container">
            <!-- Icono de búsqueda que activa el input -->
            <img class="search-icon" src="/nav/search-icon.svg" alt="Search">
            <!-- Input oculto por defecto -->
            <input id="searchInput" type="text" placeholder="Buscar..." />
        </div>
        <a href="#feria"><b>Feria</b></a>
        <a href="futbol"><b>Futbol</b></a>
    </div>
    <div class="user">
        <a href="notficaciones"><img src="/nav/notification-off.svg" alt="profile" width="20px"></a>
        <a href="#profile"><img src="/nav/profile.svg" alt="profile" width="20px"></a>
    </div>
</div>

<!-- Recuadro blanco donde se muestran los resultados -->
<div id="searchResults" class="search-results">
    <!-- Los resultados de búsqueda se mostrarán aquí -->
</div>

<style>
    .nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        background-color: #FFAB60;
        position: relative;
        z-index: 10;
    }

    .titulo a{
        text-decoration: none;
    }

    .pages {
        display: flex;
        align-items: center;
        gap: 20px;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
    }
    .pages a, .user a, .titulo h1, .titulo h4 {
        margin: 0 10px;
        text-decoration: none;
        color: black;
    }

    .pages a:hover, .titulo h1:hover {
        transform: scale(1.2);
    }

    .search-container {
        display: flex;
        align-items: center;
        position: relative;
    }

    .search-icon {
        cursor: pointer;
        width: 20px;
        height: 20px;
        margin-right: 10px;
    }

    .search-container input {
        padding: 5px;
        border-radius: 4px;
        border: 1px solid #ced4da;
        display: none; /* Ocultamos el input por defecto */
        top: 0px;
        left: 0;
        width: 100%;
        z-index: 20;
        position: relative; /* Asegura que se coloque sobre el contenido */
    }

    #searchResults {
        display: none;
        position: absolute;
        top: 60px;
        left: 0;
        right: 0;
        background-color: #FFAB60;
        border-radius: 8px;
        border: 1px solid #ced4da;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 100;
        padding: 10px;
        max-height: 300px;
        overflow-y: auto;
    }

    .result-item {
        margin: 10px 0;
        padding: 10px;
        background-color: #FFAB60;
        border-radius: 10px;
        cursor: pointer;
    }

    .result-item:hover {
        background-color: #e0953f;
    }

    .result-item h4 {
        margin: 0;
    }
</style>

<script type="module">
    // Importa el cliente de Supabase desde tu archivo supabase.js
    import supabase from './src/utils/supabase.js';

    // Elementos DOM
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    const searchIcon = document.querySelector('.search-icon');

    // Muestra el input de búsqueda al hacer clic en el icono
    searchIcon.addEventListener('click', () => {
        searchInput.style.display = 'block';
        searchInput.focus();  // Focaliza el input
    });

    // Ocultar el input y resultados al hacer clic fuera del input o icono
    document.addEventListener('click', (event) => {
        // Si el clic es fuera del input de búsqueda y el icono, lo ocultamos
        if (!searchInput.contains(event.target) && !searchIcon.contains(event.target)) {
            searchInput.style.display = 'none';
            searchResults.style.display = 'none'; // Ocultar resultados al quitar el foco
        }
    });

    // Función que se ejecuta cada vez que el usuario escribe en el input
    async function searchQuery() {
        const query = searchInput.value.toLowerCase();

        if (query.length === 0) {
            // Si el input está vacío, no mostramos resultados
            searchResults.style.display = 'none';
            searchResults.innerHTML = '';
            return;
        }

        try {
            // Limpiar los resultados anteriores
            searchResults.innerHTML = '';
            let foundResults = false;

            // Realizar las consultas a las tres tablas: equipos, usuarios, hermandades
            const { data: teams, error: teamsError } = await supabase
                .from('teams')
                .select('*')
                .ilike('id_name', `%${query}%`);  // Buscar por 'id_name' en lugar de 'name'

            if (teamsError) {
                console.error('Error en la consulta de equipos:', teamsError);
            } else if (teams && teams.length > 0) {
                foundResults = true;
                displayResults(teams, 'Equipos', 'id_name', 'team');
            }

            const { data: users, error: usersError } = await supabase
                .from('users')
                .select('*')
                .ilike('username', `%${query}%`);

            if (usersError) {
                console.error('Error en la consulta de usuarios:', usersError);
            } else if (users && users.length > 0) {
                foundResults = true;
                displayResults(users, 'Usuarios', 'username', 'user');
            }

            const { data: hermandades, error: hermandadesError } = await supabase
                .from('hermandades')
                .select('*')
                .ilike('name', `%${query}%`);

            if (hermandadesError) {
                console.error('Error en la consulta de hermandades:', hermandadesError);
            } else if (hermandades && hermandades.length > 0) {
                foundResults = true;
                displayResults(hermandades, 'Hermandades', 'name', 'hermandad');
            }

            // Si no se encontraron resultados en ninguna de las tablas
            if (!foundResults) {
                searchResults.innerHTML = `<p>No se encontraron resultados</p>`;
            }

            searchResults.style.display = foundResults ? 'block' : 'none';  // Mostrar resultados si se encontraron

        } catch (error) {
            console.error('Error al realizar la búsqueda:', error);
        }
    }

    // Función para mostrar los resultados de búsqueda
    function displayResults(data, type, field, typeId) {
        let resultsHTML = '';
        data.forEach(item => {
            resultsHTML += `
                <div class="result-item" onclick="redirectToPage('${item.id}', '${typeId}')">
                    <h4>${item[field]}</h4>
                    <p>Ver más información sobre ${type.toLowerCase()}</p>
                </div>
            `;
        });

        searchResults.innerHTML += resultsHTML;  // Añadir resultados al contenedor
    }

    // Función para redirigir al hacer clic en un resultado
    function redirectToPage(id, type) {
        // Redirigir a la página correspondiente según el tipo de item (equipo, usuario, hermandad)
        if (type === 'team') {
            window.location.href = `/team/${id}`;
        } else if (type === 'user') {
            window.location.href = `/user/${id}`;
        } else if (type === 'hermandad') {
            window.location.href = `/hermandad/${id}`;
        }
    }

    // Asignar el evento oninput para que se ejecute la función searchQuery cuando el usuario escribe
    searchInput.addEventListener('input', searchQuery);
</script>
