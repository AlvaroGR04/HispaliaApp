---
import Layout from '../../layouts/Layout.astro';
import Nav from '../../components/Nav.astro';
import supabase from '../../utils/supabase.js';

export async function getStaticPaths() {
  try {
    const { data: teams, error } = await supabase
      .from('teams')
      .select('id_name');

    if (error) {
      console.error('Error al obtener los equipos:', error);
      return [];
    }

    // ✅ Devolvemos directamente un array, no un objeto
    return teams.map((team) => ({
      params: { id_name: team.id_name },
    }));
  } catch (err) {
    console.error('Error inesperado en getStaticPaths:', err);
    return [];
  }
}

// ⚠️ Recuperamos el parámetro de la URL
const { id_name } = Astro.params;

// Obtener los datos del equipo correspondiente
const { data: teamData, error: teamError } = await supabase
  .from('teams')
  .select('*')
  .eq('id_name', id_name);

if (teamError) {
  console.error("Error al obtener los datos del equipo:", teamError);
  throw new Error('No se pudieron cargar los datos');
}

const team = teamData?.[0];
---

<Layout>
<head>
    <title>{team ? team.name : 'Equipo no encontrado'}</title>
</head>
<body>
    <Nav />
    {team ? (
    <>
    <div class="box">
        <div class="linea1">
            <img src={team.image_url} alt={team.name} style="width: 100px; max-width: 100%;" />
            <h1>{team.name}</h1>
        </div>
        <div class="linea2">
            <p>{team.description}</p>
        </div>
    </div>
    </>
    ) : (
    <p>Equipo no encontrado.</p>
    )}
</body>
</Layout>

<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #FFAB60;
    }

    .box {
        width: 100%;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .linea1 {
        display: flex;
        align-items: center;
        justify-content: center;
    }

</style>
