---
import Layout from '../../layouts/Layout.astro';
import Nav from '../../components/Nav.astro';
import supabase from '../../utils/supabase.js';

// âœ… Tipo para las noticias
type Noticia = {
  title: string;
  url: string;
  publishedAt?: string;
  description?: string;
};

export async function getStaticPaths() {
  try {
    const { data: teams, error } = await supabase
      .from('teams')
      .select('id_name');

    if (error) {
      console.error('Error al obtener los equipos:', error);
      return [];
    }

    return teams.map((team) => ({
      params: { id_name: team.id_name },
    }));
  } catch (err) {
    console.error('Error inesperado en getStaticPaths:', err);
    return [];
  }
}

const { id_name } = Astro.params;

// Obtener datos del equipo
const { data: teamData, error: teamError } = await supabase
  .from('teams')
  .select('*')
  .eq('id_name', id_name);

if (teamError) {
  console.error("Error al obtener los datos del equipo:", teamError);
  throw new Error('No se pudieron cargar los datos');
}

const team = teamData?.[0];

// âœ… Obtener noticias desde el campo news_api_url
let noticias: Noticia[] = [];

if (team?.news_api_url) {
  try {
    const response = await fetch(team.news_api_url);
    const result = await response.json();
    noticias = result.articles || result.news || [];

    // Filtrar las noticias para que solo muestren las que contienen el nombre del equipo
    noticias = noticias.filter((n: Noticia) =>
      n.title?.toLowerCase().includes(team.id_name.toLowerCase()) ||
      n.description?.toLowerCase().includes(team.id_name.toLowerCase())
    );
  } catch (error) {
    console.error("Error al cargar noticias:", error);
  }
}
---

<Layout>
  <head>
    <title>{team ? team.name : 'Equipo no encontrado'}</title>
  </head>
  <body>
    <Nav />
    {team ? (
      <>
        <div class="box">
          <div class="linea1">
            <img src={team.image_url} alt={team.name} style="width: 100px; max-width: 100%;" />
            <h1>{team.name}</h1>
          </div>
          <div class="linea2">
            <p>{team.description}</p>
          </div>
        </div>

        {noticias.length > 0 && (
          <div class="noticias">
            <h2>ðŸ“° Ãšltimas noticias</h2>
            <ul>
              {noticias.map((n) => (
                <li>
                  <a href={n.url} target="_blank" rel="noopener noreferrer">{n.title}</a>
                  {n.publishedAt && (
                    <p><small>{new Date(n.publishedAt).toLocaleString()}</small></p>
                  )}
                </li>
              ))}
            </ul>
          </div>
        )}
      </>
    ) : (
      <p>Equipo no encontrado.</p>
    )}
  </body>
</Layout>

<style>
  body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #FFAB60;
  }

  .box {
    margin: 25px 50px;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .linea1 {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
    gap: 20px;
  }

  .noticias {
    margin: 40px 50px;
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .noticias h2 {
    margin-top: 0;
    color: #333;
  }

  .noticias ul {
    list-style: none;
    padding: 0;
  }

  .noticias li {
    margin-bottom: 20px;
  }

  .noticias a {
    font-weight: bold;
    color: #006633;
    text-decoration: none;
  }

  .noticias a:hover {
    text-decoration: underline;
  }
</style>
